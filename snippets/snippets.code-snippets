{
    "GetController Snippet" : {
      "prefix" : "getcontroller",
      "body": [
        "import 'import package:get/get.dart';",
        "import 'package:meta/meta.dart';",
        "",
        "class ${1:Name}Controller extends RxController {",
        "",
        "\t final $1Repository repository;",
        "",
        "\t $1Controller({@required this.repository}) : assert(repository != null)",
        "",
        "\t final String text = 'hello'.obs;",
        "",
        "\t set text(value) => text.value = value;",
        "\t get text => this.text.value;",
        "}"

      ],
      "description": "Generate GetController."
    },
    "GetRoutes Snippet" : {
      "prefix" : "getroutes",
      "body": [
        "import 'import package:get/get.dart';",
        "",
        "class MyRoutes {",
        "",
        "static final routes = {",
        "\t '/' : GetRoute(page: MyHomePage()),",
        "\t '/second' : GetRoute(page: SecondPage()),",
        "};",
        
        "}"
      ],
      "description": "Generate GetRoutes."
    },

    "GetPage Snippet" : {
      "prefix" : "getpage",
      "body": [
        "import 'package:flutter/material.dart';",
        "import 'package:get/get.dart';",
        "import 'package:http/http.dart' as http;",
        "",
        "class ${1:Name}Page extends StatelessWidget {",
        "",
        "//final $1Repository repository = $1Repository(apiClient: apiClient(httpClient: http.Client()));",
        "",
        "@override",
        "Widget build(BuildContext context) {",
        "",
        "return Scaffold(",
        "appBar: AppBar(title: Text('$1')),",
        "",
        "body: ${2:Container}(",
        "\t child: GetX<$1Controller>(",
        "\t\t builder: (_){",
        "\t\t\t return ${3:Container}();",
        "\t\t }",
        "\t\t),",
        "\t),",
        ");",
        "}"
      ],
      "description": "Generate Page."
    },
    "GetModel Snippet" : {
      "prefix" : "getmodel",
      "body": [
        "class ${1:Model} {",
        "",
        "int id;",
        "String name;",
        "",
        "$1({ id, name })",
        "",
        "$1.fromJson(Map<String, dynamic> json){",
        "\t\t id = json['id'];",
        "\t\t name = json['name'];",
        "}",
        "}",
        "",
        "Map<String, dynamic> toJson(){",
        "\t\t final Map<String, dynamic> data = new Map<String, dynamic>();",
        "\t\t data['name'] = this.name;",
        "}",
      ],
      "description": "Generate file Model."
    },
    
}